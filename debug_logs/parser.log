started parsing 
 size is 19 and cnt is 0 with ptr: 0
_____Toks from cur_pointer: 0 _________ cnt 18
Keyword struct
Identifier a
Symbol {
New Line
Keyword int
Identifier a1
Symbol ;
New Line
Keyword char
Identifier c
Symbol ;
New Line
Keyword int
Identifier b1
Symbol ;
New Line
Symbol }
Symbol ;
______________________________________
  In parse_next() with tok 
  Keyword struct
  entered parseGlobalKeyword   entered parseKw with token:   Keyword struct
  the token is a type modifier or datatype, we can expect form of (typeMod)*(datatype)+(typemod)* {* means 0+, + means 1+} 
  entered parseDeclaration to parse potential VFSU 
  entered DT::datatype::parse. Starting series mod-type-mod 
  entered parseMod with token:   Keyword struct
  checking flags for the consecutive mods 
  in series mod-type-mod, first mod done 
  at parse dt type with tokens:   Keyword struct
  Identifier a
  We DIDNOT got a valid 2nd dt type 
  Its a struct/union, checking name by checking token: 
  Identifier a
  star cnt: 0
  in dt init   in series mod-type-mod, type done 
  entered parseMod with token:   Symbol {
  checking flags for the consecutive mods 
  in series mod-type-mod, second mod done 
  Finally the dt: 
  pdepth: 0 type: 6 
  flags: 0000000000000001
  size: 0 
  typeStr: a 
  No secondary: 

  DT parse done, parsing struct/var now   
--- new scope --- 1 
  Parsing body now 
  
--- new scope --- 2 
  Multi-line body   Expecting {  Begenning to parse a statement now:    size is 19 and cnt is 5 with ptr: 4
_____Toks from cur_pointer: 4 _________ cnt 5
Keyword int
Identifier a1
Symbol ;
New Line
Keyword char
______________________________________
  entered parseKw with token:   Keyword int
  the token is a type modifier or datatype, we can expect form of (typeMod)*(datatype)+(typemod)* {* means 0+, + means 1+} 
  entered parseDeclaration to parse potential VFSU 
  entered DT::datatype::parse. Starting series mod-type-mod 
  entered parseMod with token:   Keyword int
  checking flags for the consecutive mods 
  in series mod-type-mod, first mod done 
  at parse dt type with tokens:   Keyword int
  Identifier a1
  We DIDNOT got a valid 2nd dt type 
  star cnt: 0
  in dt init   dt1 type int 
  in series mod-type-mod, type done 
  entered parseMod with token:   Identifier a1
  checking flags for the consecutive mods 
  in series mod-type-mod, second mod done 
  Finally the dt: 
  pdepth: 0 type: 3 
  flags: 0000000000000001
  size: 4 
  typeStr: int 
  No secondary: 

  DT parse done, parsing struct/var now   Entered parseVar with name: a1 and currently pointing tok: 
Symbol ;
  Updated: var   
  After parseVar variable node in vecNodes now 
  Expecting semicolong now 
  Expecting ;  _POPPING NODE OF TYPE: var
  Updated: empty! 
  this is the largest possible varNode so far 
  this is the largest primitive varNode so far 
  and pushed into content node 
  Begenning to parse a statement now:    size is 19 and cnt is 5 with ptr: 8
_____Toks from cur_pointer: 8 _________ cnt 5
Keyword char
Identifier c
Symbol ;
New Line
Keyword int
______________________________________
  entered parseKw with token:   Keyword char
  the token is a type modifier or datatype, we can expect form of (typeMod)*(datatype)+(typemod)* {* means 0+, + means 1+} 
  entered parseDeclaration to parse potential VFSU 
  entered DT::datatype::parse. Starting series mod-type-mod 
  entered parseMod with token:   Keyword char
  checking flags for the consecutive mods 
  in series mod-type-mod, first mod done 
  at parse dt type with tokens:   Keyword char
  Identifier c
  We DIDNOT got a valid 2nd dt type 
  star cnt: 0
  in dt init   dt1 type char 
  in series mod-type-mod, type done 
  entered parseMod with token:   Identifier c
  checking flags for the consecutive mods 
  in series mod-type-mod, second mod done 
  Finally the dt: 
  pdepth: 0 type: 1 
  flags: 0000000000000001
  size: 1 
  typeStr: char 
  No secondary: 

  DT parse done, parsing struct/var now   Entered parseVar with name: c and currently pointing tok: 
Symbol ;
  Updated: var   
  After parseVar variable node in vecNodes now 
  Expecting semicolong now 
  Expecting ;  _POPPING NODE OF TYPE: var
  Updated: empty! 
  and pushed into content node 
  Begenning to parse a statement now:    size is 19 and cnt is 5 with ptr: 12
_____Toks from cur_pointer: 12 _________ cnt 5
Keyword int
Identifier b1
Symbol ;
New Line
Symbol }
______________________________________
  entered parseKw with token:   Keyword int
  the token is a type modifier or datatype, we can expect form of (typeMod)*(datatype)+(typemod)* {* means 0+, + means 1+} 
  entered parseDeclaration to parse potential VFSU 
  entered DT::datatype::parse. Starting series mod-type-mod 
  entered parseMod with token:   Keyword int
  checking flags for the consecutive mods 
  in series mod-type-mod, first mod done 
  at parse dt type with tokens:   Keyword int
  Identifier b1
  We DIDNOT got a valid 2nd dt type 
  star cnt: 0
  in dt init   dt1 type int 
  in series mod-type-mod, type done 
  entered parseMod with token:   Identifier b1
  checking flags for the consecutive mods 
  in series mod-type-mod, second mod done 
  Finally the dt: 
  pdepth: 0 type: 3 
  flags: 0000000000000001
  size: 4 
  typeStr: int 
  No secondary: 

  DT parse done, parsing struct/var now   Entered parseVar with name: b1 and currently pointing tok: 
Symbol ;
  Updated: var   
  After parseVar variable node in vecNodes now 
  Expecting semicolong now 
  Expecting ;  _POPPING NODE OF TYPE: var
  Updated: empty! 
  this is the largest possible varNode so far 
  this is the largest primitive varNode so far 
  and pushed into content node 
  Exited from the block doing multi line parsing, the content: 

  10000000000 int a1
  10000000000 char c
  10000000000 int b1
  Expecting }  finalizing with largest node:     10000000000 int b1
   and largest primitive node:     10000000000 int b1
   and size of body without padding: 9
  After padding: 12
  _PUSHING the multiline chunk as a body type node 
  Updated: body   
  
--- deleted scope --- 1 
  retrieving to wrap with a struct Node 
  _POPPING NODE OF TYPE: body
  Updated: empty! 
  Expecting ;  _PUSHING NODE OF TYPE: struct
  Updated: struct   
  wrap and push complete 
  
--- deleted scope --- 0 
  for SYMRESOLVER 
  _POPPING NODE OF TYPE: struct
  Updated: empty! 
  _PUSHING NODE OF TYPE: struct
  Updated: struct   
  for SYMRESOLVER done 
  EOF 
 size is 19 and cnt is 0 with ptr: 18
_____Toks from cur_pointer: 18 _________ cnt 0
______________________________________
  In parse_next() with tok 
  